name: Set JSON as Variable1 (Windows)

on:
  push:
    branches:
      - master

jobs:
  set_json_variable:
    runs-on: windows-latest

    steps:
    - name: Set JSON as Variable
      id: set-json
      shell: powershell
      run: |
        # Your JSON string here
        $Output = New-Object -TypeName Hashtable
        $Output.workspaceName = "az-dna-eun-law-subworkspace"
        $Output.businessCommonVNetName = "az-dna--vn-busicommonvn"
        $Output.businessCommonVNetCIDR = "192.168.0.0/24"
        $Output
        $a= $Output | convertto-json
        $b=$Output | convertto-json |convertfrom-json
        echo "##vso[task.setvariable variable=my_json;isOutput=true]$Output"
        echo "##vso[task.setvariable variable=my_json1;isOutput=true]$a"
        echo "##vso[task.setvariable variable=my_json2;isOutput=true]$b"
        $c=1234
        echo "##vso[task.setvariable variable=my_json3;isOutput=true]$c"
              
        
    - name: Use JSON Variable
      shell: powershell
      run: |
        # Access the JSON variable from the previous step
        $myJson = $env:my_json
        Write-Host "JSON variable value: $myJson"
        $myJson1 = $env:my_json1
        Write-Host "JSON variable value: $myJson1"
        $myJson2 = "{{ $env:my_json2 }} "
        Write-Host "JSON variable value: $myJson2"
        $myJson3 = "{{ $env:my_json3 }} "
        Write-Host "JSON variable value: $myJson3"



    - name: Parse JSON
      shell: powershell
      run: |
        # Parse the JSON variable
        $jsonObject = $myJson | ConvertFrom-Json
        Write-Host "Parsed JSON object:"
        $jsonObject | Format-Table -AutoSize
